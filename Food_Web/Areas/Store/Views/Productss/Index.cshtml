@model IEnumerable<Food_Web.Models.Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutStore.cshtml";
}


@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">@Html.ActionLink("Trang Chủ", "Index", "Homes") / @Html.ActionLink("Sản Phẩm", "Index", "Productss")</h6>
    </div>

    <a href="@Url.Action("Export", "Productss")" class="btn btn-primary">Export to Excel</a>

    <form id="importForm" action="@Url.Action("Import", "Productss")" method="post" enctype="multipart/form-data">
        <label for="file">Import Excel:</label>
        <input type="file" name="file" id="file" accept=".xlsx, .xls" />
        <button type="button" id="importButton" class="btn btn-success">Import</button>
    </form>

    @*<form action="@Url.Action("Import", "Productss")" method="post" enctype="multipart/form-data">
            <label for="file">Import Excel:</label>
            <input type="file" name="file" id="file" accept=".xlsx, .xls" />
            <button type="submit" class="btn btn-success">Import</button>
        </form>*@

    <div class="card-body">
        <table class="table">
            <tr>
                <td class="border">
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="font-weight: bold; text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.5);">
                            Tên
                        </span>
                    </div>
                </td>

                <td class="border">
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="font-weight: bold; text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.5);">
                            Danh Mục
                        </span>
                    </div>
                </td>
                <td class="border">
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="font-weight: bold; text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.5);">
                            Số Lượng
                        </span>
                    </div>
                </td>
                <td class="border">
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="font-weight: bold; text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.5);">
                            Giá
                        </span>
                    </div>
                </td>
                <td class="border">
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="font-weight: bold; text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.5);">
                            Hình Ảnh
                        </span>
                    </div>
                </td>
                <td class="border">
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="font-weight: bold; text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.5);">
                            Trạng Thái
                        </span>
                    </div>
                </td>
                <td class="border">
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="font-weight: bold; text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.5);">
                            Hành Động
                        </span>
                    </div>
                </td>
            </tr>


            @foreach (var item in Model)
            {
                <tr>
                    <td class="border">
                            @Html.DisplayFor(modelItem => item.Productname)
                        </td>
                        <td class="border">
                            @Html.DisplayFor(modelItem => item.Category.Categoryname)
                        </td>
                    <td class="border">
                            @Html.DisplayFor(modelItem => item.Productname)
                        </td>
                        <td class="border">
                            @if (item.Category != null)
                            {
                                @Html.DisplayFor(modelItem => item.Category.Categoryname)
                            }
                            else
                            {
                                <text>No Category</text>
                            }
                        </td>
                        <td class="border">
                            @Html.DisplayFor(modelItem => item.Soluong)
                        </td>
                        <td class="border">
                            @Html.DisplayFor(modelItem => item.price)
                        </td>
                        <td class="border">
                            <img src="~/Content/products/@item.image" style="width:80px" />
                        </td>
                    @*<td class="border">
                            @if (item.status && item.Soluong > 0)
                            {
                                <button class="btn btn-success" data-id="@item.Productid" onclick="updateProductStatus(@item.Productid, false)">Còn</button>
                            }
                            else
                            {
                                <button class="btn btn-danger" data-id="@item.Productid" onclick="updateProductStatus(@item.Productid, true)">Hết</button>
                            }
                        </td>*@
                   
                    <td class="border">
                        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
                        <a href="@Url.Action("Edit", new { id = item.Productid })" class="btn btn-primary btn-sm" title="Edit">
                            <i class="fas fa-pencil-alt"></i>
                        </a>
                        <a href="@Url.Action("Details", new { id = item.Productid })" class="btn btn-info btn-sm" title="Details">
                            <i class="fas fa-info-circle"></i>
                        </a>
                        <button class="btn btn-danger btn-sm btnRemove" title="Delete" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@item.Productid">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteModalLabel">Delete Confirmation</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <p>Are you sure you want to delete this item?</p>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                        <button type="button" class="btn btn-danger" id="confirmRemove" data-bs-dismiss="modal">Delete</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }

        </table>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>

    function updateProductQuantity(productId, newQuantity) {
            $.ajax({
                url: '@Url.Action("UpdateProductQuantity", "Productss")',
                type: 'POST',
                data: { id: productId, newQuantity: newQuantity },
                success: function (data) {
                    if (data.success) {
                        console.log('Cập nhật số lượng và trạng thái sản phẩm thành công.');
                    } else {
                        console.log('Cập nhật số lượng và trạng thái sản phẩm không thành công.');
                    }
                },
                error: function () {
                    console.log('Đã xảy ra lỗi khi cập nhật số lượng và trạng thái sản phẩm.');
                }
            });
    }

    function updateProductStatus(productId, status) {
  $.ajax({
    url: '@Url.Action("UpdateStatus", "Productss")',
    type: 'POST',
    data: { id: productId, status: status },
    success: function(result) {
      if (result.success) {
        // Update the button text and color
        var button = $('button[data-id="' + productId + '"]');
        if (status) {
          button.removeClass('btn-danger').addClass('btn-success').text('Còn');
        } else {
          button.removeClass('btn-success').addClass('btn-danger').text('Hết');
        }
      } else {
        alert('Có lỗi xảy ra khi cập nhật trạng thái sản phẩm.');
      }
    },
    error: function() {
      alert('Có lỗi xảy ra khi gửi yêu cầu cập nhật trạng thái sản phẩm.');
    }
  });
}
        $(document).ready(function () {
        $('#importButton').on('click', function () {
            var formData = new FormData($('#importForm')[0]);

            $.ajax({
                url: '@Url.Action("Import", "Productss")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.success) {
                        console.log(data.message);
                        location.reload(); // Reload the page on success
                    } else {
                        console.log('Error during import: ' + data.message);
                        // Handle error message display or other actions
                    }
                },
                error: function () {
                    console.log('An error occurred during import');
                    // Handle error message display or other actions
                }
            });
        });
    });

    //var getID = null
    //var getParent = null
    //$(document).on('click', '.btnRemove', function () {
    //    getID = $(this).data('id')
    //    getParent = $(this).closest('tr')
    //})
    //$(document).on('click', '#confirmRemove', function () {
    //    $.ajax({
    //        type: 'POST',
    //        url: '/Store/Productss/RemoveProduct',
    //        data: { id: getID },
    //        success: function (result) {
    //            if (result.success) {
    //                console.log('success')
    //                getParent.remove()
    //            }
    //        }
    //    })
    //})

    var getID = null;
    var getParent = null;

    $(document).on('click', '.btnRemove', function () {
        getID = $(this).data('id');
        getParent = $(this).closest('tr');
    });

    $(document).on('click', '#confirmRemove', function () {
        if (getID === null) {
            console.error('Product ID is not set.');
            return;
        }

        $.ajax({
            type: 'POST',
            url: '/Store/Productss/RemoveProduct',
            data: { id: getID },
            success: function (result) {
                if (result.success) {
                    console.log('Product removed successfully.');
                    getParent.remove();
                } else {
                    console.error('Failed to remove product:', result.message);
                }
            },
            error: function (xhr, status, error) {
                console.error('An error occurred while removing the product:', error);
            }
        });
    });


</script>

<style>
    .border {
        border: 1px solid black;
        padding: 5px;
        text-align: center;
        vertical-align: middle;
    }
</style>
